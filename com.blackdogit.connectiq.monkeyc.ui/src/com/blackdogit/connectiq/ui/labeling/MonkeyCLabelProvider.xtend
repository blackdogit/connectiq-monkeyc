/*
* generated by Xtext
*/
package com.blackdogit.connectiq.ui.labeling

import com.google.inject.Inject
import com.blackdogit.connectiq.monkeyC.*
import com.blackdogit.connectiq.monkeyC.ModuleDecl

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class MonkeyCLabelProvider extends org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider {

	@Inject
	new(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:

	def text(ModuleDecl e) {
		e.name
	}
	def image(ModuleDecl e) {
		'module.gif'
	}

	def text(UsingDecl e) {
		 e.module
	}
	
	def String getQualifiedName(ModuleDecl decl) {
		var d = decl
		var s = d.name
		while (d.eContainer instanceof ModuleDecl) {
			d = decl.eContainer as ModuleDecl
			s = d.name+"."+s
		}
		return s
	}
	
	def image(UsingDecl e) {
		'import_obj.gif'
	}

	def text(ClassDecl e) {
		e.name
	}
	def image(ClassDecl e) {
		'class_obj.gif'
	}

	def text(EnumDecl e) {
		"enum {"+e.values.join(", ")+"}"
	}
	def image(EnumDecl e) {
		'enum_obj.gif'
	}

	def text(FunctionDecl e) {
		e.name+"("+e.args.join(", ")+")"
	}
	def image(FunctionDecl e) {
		'type_function.gif'
	}

	def text(VarDecl e) {
		e.vars.map[name].join(", ")
	}
	def image(VarDecl e) {
		'variable.gif'
	}

	def text(ConstDecl e) {
		e.vars.map[name].join(", ")
	}
	def image(ConstDecl e) {
		'variable.gif'
	}

	def text(VarDeclPart e) {
		e.name
	}
	def image(VarDeclPart e) {
		'variable.gif'
	}

}
